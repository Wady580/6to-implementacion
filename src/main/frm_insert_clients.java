/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import connection.conn;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;

public class frm_insert_clients extends javax.swing.JFrame {

    /**
     *
     */
    
    DefaultTableModel Cliente;
    
    public frm_insert_clients() {
        initComponents();
        this.Cliente = (DefaultTableModel) tbl_cliente.getModel();
        MostrarDatosCliente("","");
    }

    public void RefrescarTablaCliente() {
        //Funcion encargada de Refrescar la tabla utilizando Revalidate
        try {
            Cliente.setColumnCount(0);
            Cliente.setRowCount(0);
            tbl_cliente.revalidate();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error " + ex);
        }
    }
    
    public final void MostrarDatosCliente(String valor, String tipo) {
        //Funcion para llenar la jtable de Usuarios desde la BD
        conn cc = new conn();
        Connection cn = conn.getConnection();
        RefrescarTablaCliente();
        Cliente.addColumn("id_cliente");
        Cliente.addColumn("nombre");
        Cliente.addColumn("apellido"); 
        Cliente.addColumn("tipo_cliente");
        Cliente.addColumn("balance");

        this.tbl_cliente.setModel(Cliente);

            String sql = "SELECT * FROM clientes";

        String[] datos = new String[4];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);         

                Cliente.addRow(datos);
            }
            tbl_cliente.setModel(Cliente);
        } catch (SQLException ex) {
            Logger.getLogger(frm_insert_clients.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error " + ex);
        }
    }
    
    public boolean RevisarCliente(String nombre, int id_cli, String apellido) {
        PreparedStatement ps;
        ResultSet rs;
        boolean checkCliente = false;
        String query = "SELECT count(id_cliente) FROM clientes WHERE nombre = ? AND id_cliente <> ? AND apellido = ? ";

        try {
            ps = conn.getConnection().prepareStatement(query);
            ps.setString(1, nombre);
            ps.setInt(2, id_cli);
            ps.setString(3, apellido);
            rs = ps.executeQuery();
            if (rs.next()) {
                checkCliente = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
        return checkCliente;
    }
    
    public void LimpiarCamposCliente() {
        txt_id_cliente.setText("");
        txt_nombre.setText("");
        txt_apellido.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_nombre = new javax.swing.JLabel();
        lbl_apellido = new javax.swing.JLabel();
        lbl_tipo = new javax.swing.JLabel();
        lbl_title = new javax.swing.JLabel();
        btn_limpiar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        txt_nombre = new javax.swing.JTextField();
        btn_insert = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        txt_apellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_cliente = new javax.swing.JTable();
        txt_id_cliente = new javax.swing.JTextField();
        lbl_balance1 = new javax.swing.JLabel();
        cbb_tipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insertar clientes");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_nombre.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_nombre.setText("Nombre");
        jPanel1.add(lbl_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));

        lbl_apellido.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_apellido.setText("Apellido");
        jPanel1.add(lbl_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 180, -1, -1));

        lbl_tipo.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_tipo.setText("Tipo de cliente");
        jPanel1.add(lbl_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));

        lbl_title.setFont(new java.awt.Font("Calibri Light", 0, 48)); // NOI18N
        lbl_title.setText("Formulario de Clientes");
        jPanel1.add(lbl_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 15, -1, 87));

        btn_limpiar.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 705, 240, 45));

        btn_borrar.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        btn_borrar.setText("Eliminar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 705, 240, 45));

        txt_nombre.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 405, 40));

        btn_insert.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        btn_insert.setText("Insertar");
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });
        jPanel1.add(btn_insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 705, 240, 45));

        btn_editar.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 705, 240, 45));

        txt_apellido.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jPanel1.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 180, 420, 40));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tbl_cliente.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        tbl_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbl_cliente.setGridColor(new java.awt.Color(232, 122, 19));
        tbl_cliente.setSelectionBackground(new java.awt.Color(10, 103, 193));
        tbl_cliente.setShowVerticalLines(false);
        tbl_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_clienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_cliente);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 1140, 315));

        txt_id_cliente.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jPanel1.add(txt_id_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 120, 40));

        lbl_balance1.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_balance1.setText("ID");
        jPanel1.add(lbl_balance1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        cbb_tipo.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        cbb_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estudiante", "Profesor", "Otro" }));
        jPanel1.add(cbb_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, 405, 45));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 135, 1500, 810));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bkg.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        // TODO add your handling code here:
        String id = txt_id_cliente.getText();
        String nom = txt_nombre.getText();
        String ape = txt_apellido.getText();
        String tipo = cbb_tipo.getItemAt(cbb_tipo.getSelectedIndex());
        if (id.isEmpty() || nom.isEmpty() || ape.isEmpty() || tipo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error, verifique que ningún campo esté vacío.");
        } else {
            int id_ = Integer.parseInt(id);
                PreparedStatement ps;
                String query = "UPDATE clientes SET nombre=?, apellido=?, tipo_cliente=? WHERE id_cliente=?";
            try {
                ps = conn.getConnection().prepareStatement(query);
                ps.setString(4, id);
                ps.setString(1, nom);
                ps.setString(2, ape);
                ps.setString(3, tipo);
                ps.executeUpdate();
                LimpiarCamposCliente();
                MostrarDatosCliente("", "");
            } catch (SQLException ex) {
                Logger.getLogger(frm_insert_clients.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error " + ex);
            }
        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        if(tbl_cliente.getSelectedRow()>=0 ){
            try {
                PreparedStatement ps;
                String query = "DELETE FROM `clientes` WHERE id_cliente=?";
                try {
                    ps = conn.getConnection().prepareStatement(query);
                    int id = Integer.parseInt((String) Cliente.getValueAt(tbl_cliente.getSelectedRow(), 0));
                    ps.setInt(1,id);
                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "Cliente Eliminado");
                        LimpiarCamposCliente();
                        MostrarDatosCliente("", "");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(frm_insert_clients.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "error " + ex);
                }
            } catch(NumberFormatException ex) {
                Logger.getLogger(frm_insert_clients.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error " + ex);
            }
        }
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        // TODO add your handling code here:
        LimpiarCamposCliente();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        String nom = txt_nombre.getText();
        String ape = txt_apellido.getText();
        String tipo = cbb_tipo.getItemAt(cbb_tipo.getSelectedIndex());

        if (nom.equals("") || ape.equals("") || tipo.equals("")) {
            JOptionPane.showMessageDialog(this, "Error, verifique que todos los campos estén llenos");
        } else {
            PreparedStatement ps;
            String query = "INSERT INTO `clientes` VALUES (0,?,?,?,0)";
            try {
                ps = conn.getConnection().prepareStatement(query);
                ps.setString(1, nom);
                ps.setString(2, ape);
                ps.setString(3, tipo);
                if (ps.executeUpdate() > 0) {
                    LimpiarCamposCliente();
                    MostrarDatosCliente("","");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frm_insert_clients.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error " + ex);
            }
        }
    }//GEN-LAST:event_btn_insertActionPerformed

    private void tbl_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_clienteMouseClicked
        // TODO add your handling code here:
        try {
            String id = (String) Cliente.getValueAt(tbl_cliente.getSelectedRow(), 0);
            String nom = (String) Cliente.getValueAt(tbl_cliente.getSelectedRow(), 1);
            String ape = (String) Cliente.getValueAt(tbl_cliente.getSelectedRow(), 2);
            txt_id_cliente.setText(id);
            txt_nombre.setText(nom);
            txt_apellido.setText(ape);
            String tipo = (Cliente.getValueAt(tbl_cliente.getSelectedRow(), 3).toString());
            int tipo_c = 0;
            switch (tipo) {
                case "Estudiante":
                    tipo_c = 0;
                    break;
                case "Profesor":
                    tipo_c = 1;
                    break;
                case "Otro":
                    tipo_c = 2;
                    break;
                default:
                    break;
            }
            cbb_tipo.setSelectedIndex(tipo_c);
            
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "error" + ex);
        }
    }//GEN-LAST:event_tbl_clienteMouseClicked

    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_insert_clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_insert_clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_insert_clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_insert_clients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_insert_clients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_insert;
    public javax.swing.JButton btn_limpiar;
    private javax.swing.JComboBox<String> cbb_tipo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_apellido;
    private javax.swing.JLabel lbl_balance1;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_tipo;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JTable tbl_cliente;
    public static javax.swing.JTextField txt_apellido;
    public static javax.swing.JTextField txt_id_cliente;
    public static javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
